name: AGP Platform CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-cli:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Install dependencies
        run: poetry install --no-interaction
        working-directory: ./agp-gemini-cli
      - name: Run tests
        run: poetry run pytest
        working-directory: ./agp-gemini-cli

  test-dashboard:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Install dependencies
        run: poetry install --no-interaction
        working-directory: ./agp-dashboard-web
      - name: Run tests
        run: poetry run pytest
        working-directory: ./agp-dashboard-web

  test-enterprise-agent: # NEW JOB
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Install dependencies
        run: poetry install --no-interaction
        working-directory: ./agp-enterprise-agent
      - name: Run tests
        run: poetry run pytest # Assuming pytest is used for agent tests
        working-directory: ./agp-enterprise-agent

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install dev dependencies (dashboard)
        run: poetry install --with dev --no-interaction
        working-directory: ./agp-dashboard-web
      - name: Run Ruff check (dashboard)
        run: poetry run ruff check .
        working-directory: ./agp-dashboard-web
      - name: Run Ruff format check (dashboard)
        run: poetry run ruff format . --check
        working-directory: ./agp-dashboard-web
      - name: Run MyPy (dashboard)
        run: poetry run mypy .
        working-directory: ./agp-dashboard-web

      - name: Install dev dependencies (cli)
        run: poetry install --with dev --no-interaction
        working-directory: ./agp-gemini-cli
      - name: Run Ruff check (cli)
        run: poetry run ruff check .
        working-directory: ./agp-gemini-cli
      - name: Run Ruff format check (cli)
        run: poetry run ruff format . --check
        working-directory: ./agp-gemini-cli
      - name: Run MyPy (cli)
        run: poetry run mypy .
        working-directory: ./agp-gemini-cli

      - name: Install dev dependencies (agent)
        run: poetry install --with dev --no-interaction
        working-directory: ./agp-enterprise-agent
      - name: Run Ruff check (agent)
        run: poetry run ruff check .
        working-directory: ./agp-enterprise-agent
      - name: Run Ruff format check (agent)
        run: poetry run ruff format . --check
        working-directory: ./agp-enterprise-agent
      - name: Run MyPy (agent)
        run: poetry run mypy .
        working-directory: ./agp-enterprise-agent

  build-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Install docs tools
        run: poetry install --with dev --no-interaction
        working-directory: ./docs
      - name: Build documentation
        run: poetry run mkdocs build --strict
        working-directory: ./docs